version: 2
jobs:
  checkout_code:
    docker:
      - image: circleci/ruby:2.5.1-node
    working_directory: ~/api.goodcity
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/api.goodcity

  bundle_dependencies:
    docker:
      - image: circleci/ruby:2.5.1-node
    working_directory: ~/api.goodcity
    steps:
      - run: mkdir -p ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run: gem install bundler
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
         key: v1-bundle-{{ checksum "Gemfile.lock" }}
      - run: bundle check --path=vendor/bundle || bundle install --deployment --jobs=4 --retry=3
      - save_cache:
          key: v1-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Download Code Climate test reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      - persist_to_workspace:
          root: tmp
          paths:
            - cc-test-reporter

  test:
    docker:
      - image: circleci/ruby:2.5.1-node
      - image: circleci/postgres:9.6.9-alpine-ram
      - image: circleci/redis:4.0.9-alpine
    parallelism: 4
    working_directory: ~/api.goodcity
    environment:
      RAILS_ENV: test
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-bundle-{{ checksum "Gemfile.lock" }}
      - attach_workspace:
          at: ~/api.goodcity/tmp
      - run: bundle install --path vendor/bundle
      - run: bundle exec rake db:create:all db:schema:load
      - run:
          name: Rspec tests
          command: |
            bundle exec rspec --format progress \
                              --format RspecJunitFormatter \
                              --out ~/rspec/rspec.xml \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split)
            ./tmp/cc-test-reporter format-coverage -t simplecov -o tmp/codeclimate.$CIRCLE_NODE_INDEX.json coverage/backend/.resultset.json
      - store_test_results:
          path: ~/rspec
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.backend.json

  upload-coverage:
    docker:
      - image: circleci/ruby:2.5.1-node
    working_directory: ~/api.goodcity
    steps:
      - attach_workspace:
          at: ~/api.goodcity/tmp
      - run:
          name: Upload coverage results to Code Climate
          command: |
            ./tmp/cc-test-reporter sum-coverage tmp/codeclimate.*.json -p 4 -o tmp/codeclimate.total.json
            ./tmp/cc-test-reporter upload-coverage -i tmp/codeclimate.total.json

  audit:
    docker:
      - image: circleci/ruby:2.5.1-node
    working_directory: ~/api.goodcity
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-bundle-{{ checksum "Gemfile.lock" }}
      - run: gem install bundler-audit
      - run: bundle-audit -v --update

  deploy:
    docker:
      - image: circleci/ruby:2.5.1-node
    working_directory: ~/api.goodcity
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-bundle-{{ checksum "Gemfile.lock" }}
      - run: bundle --path vendor/bundle
      - run: |
          [ "$CIRCLE_BRANCH" == "live" ] && bundle exec cap production deploy || bundle exec cap staging deploy

workflows:
  version: 2
  build-test-audit-and-deploy:
    jobs:
      - checkout_code
      - bundle_dependencies:
          requires:
            - checkout_code
      - test:
          requires:
            - bundle_dependencies
      - audit:
          requires:
            - checkout_code
      # - upload-coverage:
      #     requires:
      #       - test
      - deploy:
          requires:
            - test
            - audit
          filters:
            branches:
              only: /^(master|live)$/
